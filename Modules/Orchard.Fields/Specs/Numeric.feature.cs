// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Orchard.Fields.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Numeric Field")]
    public partial class NumericFieldFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Numeric.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Numeric Field", "  In order to add numeric content to my types\r\nAs an adminitrator\r\n  I want to cr" +
                    "eate, edit and publish numeric fields", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating and using numeric fields")]
        public virtual void CreatingAndUsingNumericFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating and using numeric fields", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 9
    testRunner.Given("I have installed Orchard");
#line 10
  testRunner.And("I have installed \"Orchard.Fields\"");
#line 11
    testRunner.When("I go to \"Admin/ContentTypes\"");
#line 12
    testRunner.Then("I should see \"<a[^>]*>.*?Create new type</a>\"");
#line 13
    testRunner.When("I go to \"Admin/ContentTypes/Create\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table1.AddRow(new string[] {
                        "DisplayName",
                        "Event"});
            table1.AddRow(new string[] {
                        "Name",
                        "Event"});
#line 14
        testRunner.And("I fill in", ((string)(null)), table1);
#line 18
        testRunner.And("I hit \"Create\"");
#line 19
        testRunner.And("I go to \"Admin/ContentTypes/\"");
#line 20
    testRunner.Then("I should see \"Event\"");
#line 23
 testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"");
#line 24
  testRunner.And("I follow \"Add Field\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table2.AddRow(new string[] {
                        "DisplayName",
                        "Guests"});
            table2.AddRow(new string[] {
                        "Name",
                        "Guests"});
            table2.AddRow(new string[] {
                        "FieldTypeName",
                        "NumericField"});
#line 25
  testRunner.And("I fill in", ((string)(null)), table2);
#line 30
  testRunner.And("I hit \"Save\"");
#line 31
  testRunner.And("I am redirected");
#line 32
 testRunner.Then("I should see \"The \\\"Guests\\\" field has been added.\"");
#line 35
 testRunner.When("I go to \"Admin/Contents/Create/Event\"");
#line 36
 testRunner.Then("I should see \"Guests\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table3.AddRow(new string[] {
                        "Event.Guests.Value",
                        "3"});
#line 37
 testRunner.When("I fill in", ((string)(null)), table3);
#line 40
  testRunner.And("I hit \"Save\"");
#line 41
  testRunner.And("I am redirected");
#line 42
 testRunner.Then("I should see \"Your Event has been created.\"");
#line 43
 testRunner.When("I go to \"Admin/Contents/List\"");
#line 44
 testRunner.Then("I should see \"Guests:\"");
#line 45
  testRunner.And("I should see \"3\"");
#line 48
 testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table4.AddRow(new string[] {
                        "Fields[0].NumericFieldSettings.Hint",
                        "Please enter a number"});
#line 49
  testRunner.And("I fill in", ((string)(null)), table4);
#line 52
  testRunner.And("I hit \"Save\"");
#line 53
  testRunner.And("I go to \"Admin/Contents/Create/Event\"");
#line 54
 testRunner.Then("I should see \"Please enter a number\"");
#line 57
 testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table5.AddRow(new string[] {
                        "Fields[0].NumericFieldSettings.Required",
                        "true"});
#line 58
  testRunner.And("I fill in", ((string)(null)), table5);
#line 61
  testRunner.And("I hit \"Save\"");
#line 62
  testRunner.And("I go to \"Admin/Contents/Create/Event\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table6.AddRow(new string[] {
                        "Event.Guests.Value",
                        ""});
#line 63
  testRunner.And("I fill in", ((string)(null)), table6);
#line 66
  testRunner.And("I hit \"Save\"");
#line 67
 testRunner.Then("I should see \"The field Guests is mandatory.\"");
#line 70
 testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table7.AddRow(new string[] {
                        "Fields[0].NumericFieldSettings.Minimum",
                        "-10"});
            table7.AddRow(new string[] {
                        "Fields[0].NumericFieldSettings.Maximum",
                        "100"});
#line 71
  testRunner.And("I fill in", ((string)(null)), table7);
#line 75
  testRunner.And("I hit \"Save\"");
#line 76
  testRunner.And("I go to \"Admin/Contents/Create/Event\"");
#line 77
 testRunner.Then("I should see \"min=\\\"-10\\\"\"");
#line 78
  testRunner.And("I should see \"max=\\\"100\\\"\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table8.AddRow(new string[] {
                        "Event.Guests.Value",
                        "-20"});
#line 79
 testRunner.When("I fill in", ((string)(null)), table8);
#line 82
  testRunner.And("I hit \"Save\"");
#line 83
 testRunner.Then("I should see \"The value must be greater than -10\"");
#line 84
 testRunner.When("I go to \"Admin/Contents/Create/Event\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table9.AddRow(new string[] {
                        "Event.Guests.Value",
                        "101"});
#line 85
  testRunner.And("I fill in", ((string)(null)), table9);
#line 88
  testRunner.And("I hit \"Save\"");
#line 89
 testRunner.Then("I should see \"The value must be less than 100\"");
#line 92
 testRunner.When("I go to \"Admin/ContentTypes/Edit/Event\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table10.AddRow(new string[] {
                        "Fields[0].NumericFieldSettings.Minimum",
                        "a"});
            table10.AddRow(new string[] {
                        "Fields[0].NumericFieldSettings.Maximum",
                        "b"});
#line 93
  testRunner.And("I fill in", ((string)(null)), table10);
#line 97
  testRunner.And("I hit \"Save\"");
#line 98
 testRunner.Then("I should see \"The value &#39;a&#39; is not valid for Minimum.\"");
#line 99
  testRunner.And("I should see \"The value &#39;b&#39; is not valid for Maximum.\"");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
